<?php

namespace App\Http\Controllers;

use App\Categoria;
use App\Http\Requests;
use App\Restaurante;
use Illuminate\Http\Request;

class CategoriasController extends Controller
{

    /** @var  CategoriasRepository */
    private $categoriasRepository;

    function __construct(CategoriasRepository $categoriasRepo)
    {
        $this->categoriasRepository = $categoriasRepo;
    }

    public function index($id, Request $request)
    {
        $this->setCategoria($id, $request);
        return view('categorias');
    }

    public function opciones($opcion, Request $request)
    {
        $grupo = $this->getCategoria($request);
        switch ($opcion) {
            case 1:
                $restaurantes = $this->listaRestaurantes($grupo);
                return view('users.restaurantes', compact('restaurantes'));
                break;
            case 2:
                $this->recetas($request);
                break;
            case 3:
                $this->noticias($request);
                break;
        }
    }

    public function listaRestaurantes($grupo)
    {
//        $restaurantes = Categoria::find('grupo', $grupo)->restaurantes()->orderBy('nombre')->paginate();
//        $restaurantes = Categoria::find($grupo)->restaurantes();
        $restaurantes = Restaurante::find(33)->categorias();

        dd($restaurantes);

        return $restaurantes;
    }

    public function recetas($request)
    {
        dd("Recetas: ");
    }

    public function noticias($request)
    {
        dd("Noticias: ");
    }

    public function setCategoria($id, $request)
    {
        $request->session()->flush();

        $request->session()->put('categoria', $id);

        if($id == 1){
            $message = "Diabetes";
            $request->session()->put('cabecera', $message);
        }
        elseif($id == 2){
            $message = "CeliaquÃ­a";
            $request->session()->put('cabecera', $message);
        }
        else{
            $message = "Intolerancia a la Lactosa";
            $request->session()->put('cabecera', $message);
        }

    }

    public function getCategoria($request)
    {
        return $request->session()->get('categoria');
    }


    public function create()
    {
    }


    /**
     * Store a newly created Categorias in storage.
     * POST /categorias
     *
     * @param Request $request
     *
     * @return Response
     */
    public function store(Request $request)
    {
        if(sizeof(Categorias::$rules) > 0)
            $this->validateRequestOrFail($request, Categorias::$rules);

        $input = $request->all();

        $categorias = $this->categoriasRepository->create($input);

        return $this->sendResponse($categorias->toArray(), "Categorias saved successfully");
    }

    /**
     * Display the specified Categorias.
     * GET|HEAD /categorias/{id}
     *
     * @param  int $id
     *
     * @return Response
     */
    public function show($id)
    {
        $categorias = $this->categoriasRepository->apiFindOrFail($id);

        return $this->sendResponse($categorias->toArray(), "Categorias retrieved successfully");
    }


    /**
     * Update the specified Categorias in storage.
     * PUT/PATCH /categorias/{id}
     *
     * @param  int              $id
     * @param Request $request
     *
     * @return Response
     */
    public function update($id, Request $request)
    {
        $input = $request->all();

        /** @var Categorias $categorias */
        $categorias = $this->categoriasRepository->apiFindOrFail($id);

        $result = $this->categoriasRepository->updateRich($input, $id);

        $categorias = $categorias->fresh();

        return $this->sendResponse($categorias->toArray(), "Categorias updated successfully");
    }

    /**
     * Remove the specified Categorias from storage.
     * DELETE /categorias/{id}
     *
     * @param  int $id
     *
     * @return Response
     */
    public function destroy($id)
    {
        $this->categoriasRepository->apiDeleteOrFail($id);

        return $this->sendResponse($id, "Categorias deleted successfully");
    }
}
